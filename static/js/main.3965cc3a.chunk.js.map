{"version":3,"sources":["index.js"],"names":["Game","props","state","trackTimes","basketballTimes","fitnessTimes","computerScore","results","currentPage","movesIsDisabled","username","password","nameinput","passinput","gamePage","bind","loginPage","login","storeLogin","resetGame","registerPage","handleChange","handleSubmit","class","this","timetable","split","playerScore","checkWinner","onClick","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAkEMA,E,kDACL,WAAYC,GAAQ,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CACdC,WAAY,CAAC,QAAS,QAAS,SAC/BC,gBAAiB,CAAC,QAAS,SAC3BC,aAAc,CAAC,QAAS,SACrBC,cAAe,EACfC,QAAS,CAAC,YAAY,WACtBC,YAAc,OACjBC,gBAAiB,CAAC,OAAQ,QAAS,WAAY,SAC/CC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,UAAW,IAGV,EAAKC,SAAY,EAAKA,SAASC,KAAd,gBACpB,EAAKC,UAAa,EAAKA,UAAUD,KAAf,gBAClB,EAAKE,MAAS,EAAKA,MAAMF,KAAX,gBACd,EAAKG,WAAc,EAAKA,WAAWH,KAAhB,gBACnB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBACjB,EAAKK,aAAgB,EAAKA,aAAaL,KAAlB,gBACrB,EAAKM,aAAe,EAAKA,aAAaN,KAAlB,gBACpB,EAAKO,aAAe,EAAKA,aAAaP,KAAlB,gBAxBD,E,qDAsDlB,OAzBD,qBAAKQ,MAAM,gCAAX,SACM,gCACH,qBAAKA,MAAM,qCAAX,SACF,oBAAIA,MAAM,eAAV,qCACA,qBAAKA,MAAM,qCAAX,SAAgD,oBAAIA,MAAM,eAAV,yBAC1C,gCACN,qBAAKA,MAAM,qCAAX,SACKC,KAAKC,UAAUD,KAAKtB,SAEjB,gCACP,qBAAKqB,MAAM,qCAAX,SAAiD,cAAgBC,KAAKtB,MAAMK,QAAQ,GAAGmB,MAAM,KAAK,GAAK,qBAAuBF,KAAKtB,MAAMK,QAAQ,GAAK,MACtJ,qBAAKgB,MAAM,qCAAX,SAAiD,mBAAqBC,KAAKtB,MAAMI,gBACjF,qBAAKiB,MAAM,qCAAX,SAAiD,iBAAmBC,KAAKtB,MAAMyB,cAC7EH,KAAKI,oBAGF,sBAAKL,MAAM,qCAAX,UACL,wBAAQA,MAAM,uBAAuBM,QAASL,KAAKJ,aAAnD,sBACS,wBAAQG,MAAM,uBAAuBM,QAASL,KAAKR,UAAnD,mBACT,wBAAQO,MAAM,kBAAkBM,QAASL,KAAKL,UAA9C,oC,GAjDgBW,IAAMC,WA4DzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,W","file":"static/js/main.3965cc3a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n//import './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n\nfunction ClubButtons(props) { // rock, paper, and scissor buttons\n\tif (props.value.includes(\"Basketball\")) {\n    return (\n      <button class=\"btn btn-outline-primary mr-4\" disabled={props.value.includes(\"true\")} onClick={props.onClick}>\n        {<img src = 'https://goodday451999.github.io/Rock-Paper-Scissors-Neo/images/stone.png' width=\"200\" height=\"200\"/>}\n      </button>\n    );\n  } else if (props.value.includes(\"FitnessStudio\")) {\n     return (\n      <button class=\"btn btn-outline-primary mr-4\" disabled={props.value.includes(\"true\")} onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/paper.png' width=\"200\" height=\"200\"/>}\n      </button>\n     );\n  } else if (props.value.includes(\"Track\")) {\n    return (\n      <button class=\"btn btn-outline-primary\" disabled={props.value.includes(\"true\")} onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/scissors.png' width=\"200\" height=\"200\"/>}\n      </button>\n    );\n  }\n}\n\n\nfunction timetable(props) {\n\treturn (\n\t\t<table class=\"table table-striped\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t  <th scope=\"col\">Club</th>\n\t\t\t\t  <th scope=\"col\">Time</th>\n\t\t\t\t  <th scope=\"col\">Trainer</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t  <td>{props.trackTimes[0]}</td>\n\t\t\t\t  <td>Otto</td>\n\t\t\t\t  <td>@mdo</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t  <td>Jacob</td>\n\t\t\t\t  <td>Thornton</td>\n\t\t\t\t  <td>@fat</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t  <td>Larry</td>\n\t\t\t\t  <td>the Bird</td>\n\t\t\t\t  <td>@twitter</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t);\n\t\n}\n\n\nclass Game extends React.Component {\n\tconstructor(props) {\n    super(props);\n\n    this.state = {\n\t  trackTimes: [\"11:00\", \"14:00\", \"17:00\"],\n\t  basketballTimes: [\"12:00\", \"16:00\"],\n\t  fitnessTimes: [\"13:00\", \"18:00\"],\n      computerScore: 0,\n      results: [\"n_nothing\",\"nothing\"], // last move played by each player\n      currentPage : \"game\", // to control which page loads\n\t  movesIsDisabled: [\"Rock\", \"Paper\", \"Scissors\", \"false\"], // stores names for the buttons, and if the buttons are disabled\n\t  username: \"\", // registered username\n\t  password: \"\", // registered password\n\t  nameinput: \"\", // username input by user to login\n\t  passinput: \"\" // password input by user to login\n    };\n\n    this.gamePage  = this.gamePage.bind(this);\n\tthis.loginPage  = this.loginPage.bind(this);\n\tthis.login  = this.login.bind(this);\n\tthis.storeLogin  = this.storeLogin.bind(this);\n\tthis.resetGame = this.resetGame.bind(this);\n\tthis.registerPage  = this.registerPage.bind(this);\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  render() {\n    const game = ( // contetns for game page\n\t<div class=\"d-flex justify-content-center\">\n       <div>\n\t   <div class=\"d-flex justify-content-center mt-4\">\n\t\t<h2 class=\"text-primary\">CIT Health & Fitness!</h2></div>\n\t\t<div class=\"d-flex justify-content-center mt-2\"><h4 class=\"text-primary\">Home Page</h4></div>\n        <div>\n\t\t<div class=\"d-flex justify-content-center mt-4\">\n\t\t\t\t  {this.timetable(this.state)}\n\t\t</div>\n          <div>\n\t\t\t<div class=\"d-flex justify-content-center mt-4\">{\"You played \" + this.state.results[0].split(\"_\")[1] + \". Computer played \" + this.state.results[1] + \".\"}</div>\n\t\t\t<div class=\"d-flex justify-content-center mt-2\">{\"Computer score: \" + this.state.computerScore}</div>\n\t\t\t<div class=\"d-flex justify-content-center mt-2\">{\"Player score: \" + this.state.playerScore}</div>\n\t\t\t\t{this.checkWinner()}\n\t\t\t</div>\n        </div>\n        <div class=\"d-flex justify-content-center mt-4\">\n\t\t\t<button class=\"btn btn-outline-dark\" onClick={this.registerPage}>Register</button>\n            <button class=\"btn btn-outline-dark\" onClick={this.loginPage}>Login</button>\n\t\t\t<button class=\"btn btn-primary\" onClick={this.resetGame}>Reset Game</button>\n          </div>\n      </div>\n\t  </div>\n    );\n  \n  return(game);\n}\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}